<?php
// auto-generated by sfPropelCrud
// date: 2006/08/16 01:08:07
?>
<?php

/**
 * impostazione actions.
 *
 * @package    ##PROJECT_NAME##
 * @subpackage impostazione
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 1415 2006-06-11 08:33:51Z fabien $
 */
class impostazioneActions extends sfActions
{
  public function executeIndex ()
  {
    return $this->forward('impostazione', 'edit');
  }

  public function executeCreate ()
  {
    $this->impostazione = new Impostazione();
    $this->setTemplate('edit');
  }

  public function executeEdit ()
  {
    $this->impostazione = ImpostazionePeer::retrieveByPk($this->getUser()->getAttribute('id_utente'));
    if(is_null($this->impostazione)){
    	$this->forward('impostazione','create');
    }
  }

  public function executeUpdate ()
  {
    if (!$this->getRequestParameter('id_utente', 0))
    {
      $impostazione = new Impostazione();
    }
    else
    {
      $impostazione = ImpostazionePeer::retrieveByPk($this->getRequestParameter('id_utente'));
      $this->forward404Unless($impostazione);
    }

    $impostazione->setIdUtente($this->getUser()->getAttribute('id_utente'));
    $impostazione->setNumClienti($this->getRequestParameter('num_clienti'));
    $impostazione->setNumFatture($this->getRequestParameter('num_fatture'));
    $impostazione->setRigheDettagli($this->getRequestParameter('righe_dettagli'));
    $impostazione->setRitenutaAcconto($this->getRequestParameter('percentuale_ra').'/'.$this->getRequestParameter('percentuale_imponibile_ra'));
    $impostazione->setTipoRitenuta($this->getRequestParameter('tipo_ritenuta'));
    $impostazione->setConsegnaCommercialista($this->getRequestParameter('consegna_commercialista'));
    $impostazione->setDepositaIva($this->getRequestParameter('deposita_iva'));
    $impostazione->setFatturaAutomatica($this->getRequestParameter('fattura_automatica'));
    $impostazione->setCodiceCliente($this->getRequestParameter('codice_cliente'));
    $impostazione->setLabelImponibile($this->getRequestParameter('label_imponibile'));
    $impostazione->setLabelSpese($this->getRequestParameter('label_spese'));
    $impostazione->setLabelImponibileIva($this->getRequestParameter('label_imponibile_iva'));
    $impostazione->setLabelIva($this->getRequestParameter('label_iva'));
    $impostazione->setLabelTotaleFattura($this->getRequestParameter('label_totale_fattura'));
    $impostazione->setLabelRitenutaAcconto($this->getRequestParameter('label_ritenuta_acconto'));
    $impostazione->setLabelNettoLiquidare($this->getRequestParameter('label_netto_liquidare'));
    $impostazione->setLabelQuantita($this->getRequestParameter('label_quantita'));
    $impostazione->setLabelDescrizione($this->getRequestParameter('label_descrizione'));
    $impostazione->setLabelPrezzoSingolo($this->getRequestParameter('label_prezzo_singolo'));
    $impostazione->setLabelPrezzoTotale($this->getRequestParameter('label_prezzo_totale'));
    $impostazione->setLabelSconto($this->getRequestParameter('label_sconto'));

    $impostazione->save();

    $this->getRequest()->setParameter('success','Impostazioni modificate con successo.');
    $this->getUser()->setAttribute('impostazioni',$impostazione);
    return $this->forward('impostazione','edit');
  }


  public function handleErrorUpdate()
  {
  	if(!$this->getRequestParameter('id_utente',0))
  	{
  		$this->forward('impostazione','create');
  	}
  	else
  	{
  		$this->forward('impostazione','edit');
  	}
  }
}
