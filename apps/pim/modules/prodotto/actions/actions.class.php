<?php
// auto-generated by sfPropelCrud
// date: 2006/08/29 09:50:52
?>
<?php

/**
 * prodotto actions.
 *
 * @package    ##PROJECT_NAME##
 * @subpackage prodotto
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 1415 2006-06-11 08:33:51Z fabien $
 */
class prodottoActions extends sfActions
{
  public function executeIndex ()
  {
    return $this->forward('prodotto', 'list');
  }

  public function executeList ()
  {
    $this->prodottos = ProdottoPeer::doSelect(new Criteria());
  }

  public function executeCreate ()
  {
    $this->prodotto = new Prodotto();

    $this->setTemplate('edit');
  }

  public function executeEdit ()
  {
    $this->prodotto = ProdottoPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->prodotto);
  }

  public function executeUpdate ()
  {
    if (!$this->getRequestParameter('id', 0))
    {
      $prodotto = new Prodotto();
    }
    else
    {
      $prodotto = ProdottoPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($prodotto);
    }

    $prodotto->setId($this->getRequestParameter('id'));
    $prodotto->setIdUtente($this->getUser()->getAttribute('id_utente'));
    $prodotto->setNome($this->getRequestParameter('nome'));
    $prodotto->setCodice($this->getRequestParameter('codice'));
    $prodotto->setPrezzo($this->getRequestParameter('prezzo'));

    $prodotto->save();

    return $this->redirect('prodotto/list');
  }

  public function executeDelete ()
  {
    $prodotto = ProdottoPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($prodotto);

    $prodotto->delete();

    return $this->redirect('prodotto/list');
  }
  
  public function executeChoose(){
  	
  	$this->prodottos = ProdottoPeer::doSelect(new Criteria());
  }
  
  public function handleErrorUpdate(){
  	if($this->getRequestParameter('id',0))
  		$this->forward('prodotto','edit');
  	else 
  		$this->forward('prodotto','create');
  }
}
